import config
import app.util.referrals
import app.util.db
from app.keyboards.default import general_menu

# setup
from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text

from core import bot, DataStorage

async def cmd_start(message: types.Message):
    # Check if the message contains the referral parameter
    referral_user_id = app.util.referrals.decode_payload(message.get_args())
    if referral_user_id and referral_user_id != -1:
        referral_user_id = int(referral_user_id.split("_")[-1])
        # Check if the user is using own referral link
        if int(referral_user_id) == message.from_user.id:
            await message.reply('–¢–∏ –Ω–µ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤–ª–∞—Å–Ω–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.\n'
                            f'–ü–µ—Ä–µ—à–ª–∏ –π–æ–≥–æ —Å–≤–æ—ó–º –¥—Ä—É–∑—è–º, —â–æ–± –º–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è.')
        # Check if user was already referred
        elif DataStorage.checkUserInDB(message.from_user.id):
            await message.reply("–¢–≤—ñ–π –¥—Ä—É–≥ –≤–∂–µ –ø–µ—Ä–µ–π—à–æ–≤ –∑–∞ —Ü–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º.")
        else:
            #add user to the db
            DataStorage.createUser(message.from_user.id)
            # Increment the referral counter for the user who referred someone
            referrals_counter = DataStorage.getReferrals(referral_user_id) + 1
            DataStorage.updateReferrals(referral_user_id, referrals_counter)

            # Check if the referral count has reached config.QUESTIONS_COUNT and send congratulations message
            if referrals_counter == config.REFERRALS_NEEDED:
                DataStorage.updateReferrals(referral_user_id,0)
                questions_counter = DataStorage.getQuestions(referral_user_id) + 1
                DataStorage.updateQuestions(referral_user_id, questions_counter)
                await bot.send_message(int(referral_user_id), f"–í—ñ—Ç–∞—é! {config.REFERRALS_NEEDED} –ª—é–¥–µ–π –¥–æ–ª—É—á–∏–ª–∏—Å—å —á–µ—Ä–µ–∑ —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è")
    await bot.send_message(message.chat.id,
                           "–ü—Ä–∏–≤—ñ—Ç, –¥—Ä—É–∂–µ!üëãüèª\n"
                           f"–†–∞–¥—ñ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–∏ —Ç–æ–±—ñ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞,—è–∫–∏–π –≤–∏—Ä—ñ—à—É–≤–∞—Ç–∏–º–µ –≤—Å—ñ —Ç–≤–æ—ó –ø–∏—Ç–∞–Ω–Ω—è –ø–æ –Ω–∞–≤—á–∞–Ω–Ω—éüéìüìö\n"
                           f"–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–æ–∑—Ä–æ–±–∏–ª–∞ –π–æ–≥–æ —Å–∞–º–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —Ç–∞ —É—á–Ω—ñ–≤, –∞–¥–∂–µ –º–∏ —Ç–∞–∫–æ–∂ –Ω–∏–º–∏ –∫–æ–ª–∏—Å—å –±—É–ª–∏ —ñ —Ä–æ–∑—É–º—ñ—î–º–æ, —è–∫ –≤–∞–∂–∫–æ –±—É–≤–∞—î –≤—Å—Ç–∏–≥–∞—Ç–∏ –≤—Å–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏.\n\n"
                           f"–ó–∞–≤–¥–∞–Ω–Ω—è, —Ç–µ—Å—Ç–∏, —Ä–µ—Ñ–µ—Ä–∞—Ç–∏ - –≤—Å–µ —Ü–µ —ñ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ –Ω–∞—à –±–æ—Ç –∑—Ä–æ–±–∏—Ç—å –∑–∞ –≤–∞—Å!ü§ñ\n\n"
                           f"–©–æ –∂, –Ω–µ –±—É–¥–µ–º–æ —Ç—è–≥–Ω—É—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —Ö–≤—ñ—Å—Ç —ñ —Ä–æ–∑–ø–æ—á–Ω–µ–º–æ –Ω–∞—à–µ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—èüöÄ\n"
                           f"–©–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å?",
                             reply_markup=general_menu())

async def process_terms_handlers(message: types.Message):
    await bot.send_message(message.chat.id,
                           "–ê–±–∏ —É–Ω–∏–∫–Ω—É—Ç–∏ –Ω–µ–ø–æ—Ä–æ–∑—É–º—ñ–Ω—å, –º–∏ —Ö–æ—á–µ–º–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –Ω–∞–π–±—ñ–ª—å—à –ø–æ—à–∏—Ä–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è:\n\n"
                            f"-–Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç–∞–≤–∏—Ç–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚ùì\n\n"
                            f"–ó–∞–ø–∏—Ç–∞–Ω–Ω—è –º—É—Å–∏—Ç—å –±—É—Ç–∏ —è–∫–æ–º–æ–≥–∞ –¥–µ—Ç–∞–ª—å–Ω—ñ—à–∏–º —ñ —Ä–æ–∑–∫—Ä–∏—Ç–∏–º.–ü–∞–º'—è—Ç–∞–π, –≤—Å–µ —Ü–µ –ø–∏—à–µ —Ä–æ–±–æ—Ç, —Ç–æ–º—É —á–∏–º –¥–µ—Ç–∞–ª—å–Ω—ñ—à–∏–º –±—É–¥–µ –æ–ø–∏—Å —Ç–≤–æ—î—ó –ø—Ä–æ–±–ª–µ–º–∏, —Ç–∏–º –∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à.\n"
                            f"–¢–∞–∫–æ–∂,—Ç–∏ –º–æ–∂–µ—à –¥–æ–ø–æ–≤–Ω—é–≤–∞—Ç–∏ —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è, —É—Ç–æ—á–Ω–∏–≤—à–∏, —â–æ —Å–∞–º–µ –±–æ—Ç –º–∞—î –¥–æ–¥–∞—Ç–∏/–∑–∞–±—Ä–∞—Ç–∏.\n\n"
                            f"–ù–∞–ø—Ä–∏–∫–ª–∞–¥:\n"
                            f'"–ó—Ä–æ–±–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—Ç—à–∏–º" –∞–±–æ "–Ω–∞–ø–∏—à–∏ —Ü–µ –≤—Å–µ –≤ –≥—É–º–æ—Ä–∏—Å—Ç–∏—á–Ω—ñ–π –º–∞–Ω–µ—Ä—ñ".\n\n'
                            f"-–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—èüòé\n\n"
                            f'–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–†–µ—Ñ–µ—Ä–∞–ª–∫–∞üîó" , –ø—ñ—Å–ª—è —á–æ–≥–æ –ø–æ–±–∞—á–∏—à –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è,—è–∫–µ —Ç–∏ –º–∞—î—à –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ —Å–≤–æ—ó–º –¥—Ä—É–∑—è–º.–ó–∞ –∫–æ–∂–Ω—ñ 3 –¥—Ä—É–≥–∞,—è–∫—ñ –ø–µ—Ä–µ–π–¥—É—Ç—å –ø–æ —Ç–≤–æ—î–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è.\n'
                            f"–£–í–ê–ì–ê!\n"
                            f"–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ,–∫–æ–ª–∏ –¥—Ä—É–∑—ñ –ø–æ—á–Ω—É—Ç—å —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º.\n"
                            f'–ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Å–∫—ñ–ª—å–∫–∏ –¥—Ä—É–∑—ñ–≤ –∑–∞–π—à–ª–∏ –ø–æ —Ç–≤–æ—î–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é —Ç–∏ –º–æ–∂–µ—à, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—Ä–æ—à–µ–Ω—ñ –¥—Ä—É–∑—ñüëØ‚Äç‚ôÄÔ∏è".\n'
                            f"-–û–ø–ª–∞—Ç–∞üíµ\n\n"
                            f'–ú–∏ –ø—Ä–∏–π–º–∞—î–º–æ –æ–ø–ª–∞—Ç—É –≤ –≥—Ä–∏–≤–Ω—è—Ö, –Ω–∞ –ø—Ä–∞–π—Å–ª–∏—Å—Ç –º–æ–∂–µ—à –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –Ω–∞—Ç–∏—Å–Ω—É–≤–∞—à–∏ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç–∏üí∏".\n\n'
                            f"-–ü—ñ–¥—Ç—Ä–∏–º–∫–∞üë®‚Äçüíª\n\n"
                            f"–Ø–∫—â–æ —É —Ç–µ–±–µ –≤–∏–Ω–∏–∫–∞—é—Ç—å –ø—Ä–æ–±–ª–µ–º–∏,—è–∫—ñ –Ω–µ —î –∑–∞–∑–Ω–∞—á–µ–Ω–∏–º–∏ –≤–∏—â–µ,—Ç–∏ –º–æ–∂–µ—à –∑–≤'—è–∑–∞—Ç–∏—Å—å –∑ –Ω–∞–º–∏ —ñ –º–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ —Ç–æ–±—ñ —ó—Ö –≤–∏—Ä—ñ—à–∏—Ç–∏.–ù–∞–º –≤–∞–∂–ª–∏–≤—ñ –≤–∞—à—ñ –≤—ñ–¥–≥—É–∫–∏ —ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ,—â–æ–± –º–∏ –º–æ–≥–ª–∏ –ø–æ–∫—Ä–∞—â—É–≤–∞—Ç–∏ —è–∫—ñ—Å—Ç—å –±–æ—Ç–∞, —Ç–∏–º —Å–∞–º–∏–º, —Ä–æ–±–ª—è—á–∏ –π–æ–≥–æ –∑—Ä—É—á–Ω—ñ—à–∏–º –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è‚ò∫Ô∏è\n")
async def check_questions_handler(message: types.Message):
    # Get the referral count for the user
    count = DataStorage.getQuestions(message.from_user.id)
    # Send the referral count to the user
    await bot.send_message(
        message.chat.id,
        f"–ó–∞–ª–∏—à–∏–ª–æ—Å—è {count} –ø–∏—Ç–∞–Ω—å."
    )

async def refferal_link_handler(message: types.Message):
    user_id = app.util.referrals.encode_payload(message.from_user.id)
    referral_link = f'<a href="tg://resolve?domain=asjhdkaksjbot&start={user_id}">–ö–ª—ñ–Ω–∫–∏ —Å—é–¥–∏, —â–æ–± —Å—Ç–∞—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º</a>'

    # Send the referral link to the user
    await bot.send_message(
        message.chat.id,
        "–ü–µ—Ä–µ—à–ª–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥—Ä—É–∑—è–º,–∞–±–∏ –≤–æ–Ω–∏ —Å—Ç–∞–ª–∏ —Ç–≤–æ—ó–º–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏:\n" + referral_link,
        parse_mode='HTML'
    )

async def check_referrals_handler(message: types.Message):
    # Get the referral count for the user
    count = DataStorage.getReferrals(message.from_user.id)
    if count == 1:
        # Send the referral count to the user
        await bot.send_message(
            message.chat.id,
            f"{count} –ª—é–¥–∏–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∞ —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è."
        )
    elif count == 2 or count ==3 or count == 4:
        await bot.send_message(
            message.chat.id,
            f"{count} –ª—é–¥–∏–Ω–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è."
        )
    else:
        await bot.send_message(
            message.chat.id,
            f"{count} –ª—é–¥–µ–π –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è."
        )

# register all handlers
def register_handlers_common(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands=['start'])
    dp.register_message_handler(process_terms_handlers, Text('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è ‚ÑπÔ∏è'))
    dp.register_message_handler(check_questions_handler, Text('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π ü§ì'))
    dp.register_message_handler(refferal_link_handler, Text('–†–µ—Ñ–µ—Ä–∞–ª–∫–∞ üîó'))
    dp.register_message_handler(check_referrals_handler, Text('–ó–∞–ø—Ä–æ—à–µ–Ω—ñ –¥—Ä—É–∑—ñ üëØ‚Äç‚ôÄÔ∏è'))